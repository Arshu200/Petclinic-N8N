pipeline {
  agent any

  tools {
    maven 'Maven'  // Use the Maven installation configured in Jenkins
  }

  stages {
    stage('Build') {
      steps {
        script {
          sh 'mvn clean package'
        }
      }
    }

    stage('Containerization') {
      steps {
        script {
          sh "docker build -t spring-petclinic:${env.BUILD_NUMBER} ."
        }
      }
    }
  }

  post {
    failure {
      script {
        try {
          echo "Getting full pipeline log..."

          def log = currentBuild.rawBuild.getLog(Integer.MAX_VALUE)
          def logText = log.join("\n")

          // Construct JSON payload with log inside
          def payload = groovy.json.JsonOutput.toJson([log: logText])

          def response = httpRequest(
            httpMode: 'POST',
            url: 'https://clops.app.n8n.cloud/webhook/cd51c894-e55e-40ee-b674-eb1839605b78',
            contentType: 'APPLICATION_JSON',
            requestBody: payload
          )

          echo "Webhook response: ${response.status} - ${response.content}"
        } catch (Exception e) {
          echo "ERROR sending webhook: ${e.message}"
        }
      }
    }
    always {
      script {
        def status = currentBuild.result ?: 'SUCCESS'
        def color = (status == 'SUCCESS') ? 'good' : 'danger'
        slackSend channel: '#test-internal',
          color: color,
          message: "The pipeline ${env.JOB_NAME} with build number ${env.BUILD_NUMBER} has finished with status: ${status}"
      }
    }
  }
}