pipeline {
  agent {
    docker {
      image 'maven:3.8.4-openjdk-11'
      args '-v /root/.m2:/root/.m2'
    }
  }

  stages {
    stage('Build') {
      steps {
        sh 'mvn clean package'
      }
    }

    stage('Containerization') {
      agent any
      steps {
        script {
          sh "docker build -t spring-petclinic:${env.BUILD_NUMBER} ."
        }
      }
    }
  }

  post {
    failure {
      script {
        try {
          echo "Getting full pipeline log..."

          def log = currentBuild.rawBuild.getLog(Integer.MAX_VALUE)
          def logText = log.join("\n")

          // Construct JSON payload with log inside
          def payload = groovy.json.JsonOutput.toJson([log: logText])

          def response = httpRequest(
            httpMode: 'POST',
            url: 'https://clops.app.n8n.cloud/webhook/d82dd1b1-1a68-423e-9ec1-f7c1894ce73b',
            contentType: 'APPLICATION_JSON',
            requestBody: payload
          )

          echo "Webhook response: ${response.status} - ${response.content}"
        } catch (Exception e) {
          echo "ERROR sending webhook: ${e.message}"
        }
      }
    }
  }
}